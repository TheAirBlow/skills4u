<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>Не беспокойтесь - решение задания не запустится. Мы используем предпросмотр заданий комнаты (который в 99% случаев вам не доступен через сам сайт). 
Если программа не смогла решить одно из заданий в комнате, напишите об этом суда: https://github.com/theairblow/skysmart/issues, указав UUID задания, либо код комнаты.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wcF/9SedlJAJwAAAABJRU5ErkJggg==
</value>
  </data>
</root>